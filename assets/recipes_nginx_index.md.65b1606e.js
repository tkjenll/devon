import{o as n,c as s,a}from"./app.41bbddeb.js";const e='{"title":"NGINX Recipe","description":"Add NGINX Reverse Proxy to your local dev environment using Devon","frontmatter":{"title":"NGINX Recipe","head":[["meta",{"name":"description","content":"Add NGINX Reverse Proxy to your local dev environment using Devon"}],["meta",{"name":"description","content":"Add NGINX Reverse Proxy to your local dev environment using Devon"}]]},"headers":[{"level":2,"title":"Configs","slug":"configs"},{"level":2,"title":"Site Configurations","slug":"site-configurations"}],"relativePath":"recipes/nginx/index.md","lastUpdated":1628743439761}',t={},o=[a('<h1 id="nginx-recipe"><a class="header-anchor" href="#nginx-recipe" aria-hidden="true">#</a> NGINX Recipe</h1><h2 id="configs"><a class="header-anchor" href="#configs" aria-hidden="true">#</a> Configs</h2><p>If you chose not to add an NGINX Reverse Proxy to your monorepo during the <code>devon init</code> command, you can add it using the following recipe:</p><p><code>.devon/proxy/.devconfig.ts</code></p><div class="language-typescript"><pre><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> ServiceConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@casthub/devon&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> config<span class="token operator">:</span> ServiceConfig <span class="token operator">=</span> <span class="token punctuation">{</span>\n    compose<span class="token operator">:</span> <span class="token punctuation">{</span>\n        image<span class="token operator">:</span> <span class="token string">&#39;nginx:latest&#39;</span><span class="token punctuation">,</span>\n        ports<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;80:80&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;443:443&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        volumes<span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">&#39;./.devon/proxy/sites:/etc/nginx/conf.d&#39;</span><span class="token punctuation">,</span> <span class="token comment">// Map a `sites` directory to the nginx config</span>\n            <span class="token string">&#39;./.devon/proxy/certs:/etc/ssl&#39;</span><span class="token punctuation">,</span> <span class="token comment">// Only needed if you need the Devon local SSL</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        restart<span class="token operator">:</span> <span class="token string">&#39;always&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><p><code>.devon.ts</code></p><div class="language-typescript"><pre><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> DefinitionFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@casthub/devon&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> config<span class="token operator">:</span> DefinitionFile <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token operator">...</span>\n    services<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token operator">...</span>\n        <span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">&#39;proxy&#39;</span><span class="token punctuation">,</span>\n            path<span class="token operator">:</span> <span class="token string">&#39;.devon/proxy&#39;</span><span class="token punctuation">,</span>\n            force<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// Makes sure NGINX _always_ boots</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token operator">...</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Make sure to re-run the <code>devon switch</code> command to bring the new container up!</p></div><h2 id="site-configurations"><a class="header-anchor" href="#site-configurations" aria-hidden="true">#</a> Site Configurations</h2><p>Looking at the Docker Compose volumes in the service config, we mount a <code>.devon/proxy/sites</code> folder to the container. This directory is where you can add all of your NGINX site config files.</p><p>For example, to forward to a <a href="https://vitejs.dev/" target="_blank" rel="noopener noreferrer">Vite</a> dev server:</p><p><code>.devon/proxy/sites/example.conf</code></p><div class="language-nginx"><pre><code><span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>\n    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">443</span> ssl</span><span class="token punctuation">;</span> <span class="token comment"># Switch this to `listen 80;` if not using SSL</span>\n    <span class="token directive"><span class="token keyword">server_name</span> local.example.com</span><span class="token punctuation">;</span>\n\n    <span class="token comment"># Only needed if using the Devon-managed SSL</span>\n    <span class="token directive"><span class="token keyword">ssl_certificate</span> /etc/ssl/local.example.com.pem</span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">ssl_certificate_key</span> /etc/ssl/local.example.com-key.pem</span><span class="token punctuation">;</span>\n\n    <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">{</span>\n        <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Real-IP <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>\n        <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-For <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>\n        <span class="token directive"><span class="token keyword">proxy_set_header</span> Host <span class="token variable">$host</span></span><span class="token punctuation">;</span>\n        <span class="token directive"><span class="token keyword">proxy_pass</span> http://host.docker.internal:3000</span><span class="token punctuation">;</span> <span class="token comment"># Points to `localhost:3000`</span>\n        <span class="token directive"><span class="token keyword">proxy_redirect</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span>\n        <span class="token directive"><span class="token keyword">proxy_http_version</span> 1.1</span><span class="token punctuation">;</span>\n\t    <span class="token directive"><span class="token keyword">proxy_set_header</span> Upgrade <span class="token variable">$http_upgrade</span></span><span class="token punctuation">;</span>\n\t    <span class="token directive"><span class="token keyword">proxy_set_header</span> Connection <span class="token string">&quot;Upgrade&quot;</span></span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment"># Remove this server if not using SSL</span>\n<span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>\n    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">80</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">server_name</span> local.example.com</span><span class="token punctuation">;</span>\n\n    <span class="token directive"><span class="token keyword">return</span> <span class="token number">301</span> https://<span class="token variable">$host</span><span class="token variable">$request_uri</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Make sure to re-run the <code>devon switch</code> command any time you change these configs to restart NGINX</p></div>',14)];t.render=function(a,e,t,p,c,i){return n(),s("div",null,o)};export{e as __pageData,t as default};
