import{o as e,c as t,a as n}from"./app.41bbddeb.js";const o='{"title":"Getting Started","description":"Get started using the Devon CLI for Docker","frontmatter":{"title":"Getting Started","head":[["meta",{"name":"description","content":"Get started using the Devon CLI for Docker"}],["meta",{"name":"description","content":"Get started using the Devon CLI for Docker"}]]},"headers":[{"level":2,"title":"Installing","slug":"installing"},{"level":2,"title":"Requirements","slug":"requirements"},{"level":2,"title":"Initializing a Monorepo","slug":"initializing-a-monorepo"},{"level":2,"title":"Starting your Environment","slug":"starting-your-environment"}],"relativePath":"getting-started/index.md","lastUpdated":1628743439761}',i={},a=[n('<h1 id="getting-started"><a class="header-anchor" href="#getting-started" aria-hidden="true">#</a> Getting Started</h1><h2 id="installing"><a class="header-anchor" href="#installing" aria-hidden="true">#</a> Installing</h2><p>Devon is distributed as a NodeJS-based CLI through npm. You can install it locally, but it&#39;s easier to work with when installed globally:</p><div class="language-bash"><pre><code><span class="token function">yarn</span> global <span class="token function">add</span> @casthub/devon\n\n<span class="token comment"># or</span>\n\n<span class="token function">npm</span> <span class="token function">install</span> -g @casthub/devon\n</code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Devon is <strong>not meant for production environments</strong> - it exists purely to make local development easier.</p></div><h2 id="requirements"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2><p>Devon has a couple requirements for running different aspects of the CLI. Whether you install the optional ones or not is up to you.</p><ul><li>Docker <strong>[required]</strong> - Devon uses Docker to run the virtualized environment. <a href="https://www.docker.com/products/docker-desktop" target="_blank" rel="noopener noreferrer">Download Docker here</a>.</li><li>mkcert - If you want to use the SSL Automation provided by Devon, you need to install this. <a href="https://github.com/FiloSottile/mkcert#installation" target="_blank" rel="noopener noreferrer">Installation instructions here</a>.</li></ul><h2 id="initializing-a-monorepo"><a class="header-anchor" href="#initializing-a-monorepo" aria-hidden="true">#</a> Initializing a Monorepo</h2><p>Devon is built to be added to existing Monorepos - so make sure you set up yours via Yarn workspaces/Lerna/etc. before initializing Devon.</p><p>Using the <code>devon init</code> command at the root-level of your Monorepo, you&#39;ll be taken through a list of options to bootstrap your new Devon set-up.</p><p>This includes things like:</p><ul><li>Naming your Project</li><li>Choosing existing services to bootstrap</li><li>Optionally add some additional services, such as MySQL, Redis or an NGINX Proxy</li></ul><p>Once you&#39;re done initializing Devon in your monorepo, you&#39;re good to go!</p><h2 id="starting-your-environment"><a class="header-anchor" href="#starting-your-environment" aria-hidden="true">#</a> Starting your Environment</h2><p>The one command you&#39;ll likely use 90% of the time is <code>devon switch</code>. This command will let you pick which services you&#39;d like to work on, which environment you want them to use, and then compile the relevant Docker Compose and start the containers.</p><p>At this point you&#39;re all set - you can use <code>devon help</code> for a list of commands and their usage, or check out our predefined recipes.</p>',17)];i.render=function(n,o,i,r,s,l){return e(),t("div",null,a)};export{o as __pageData,i as default};
